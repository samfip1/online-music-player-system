// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  name String
  provider Provider
  // role Role
  createAt DateTime @default(now())
  streams Stream[]
  upvotes Upvotes[]
}


model Stream {
  id String @id @default(uuid())
  type StreamType
  acive Boolean @default(true)
  useId String
  user User @relation(fields: [useId], references: [id])
  createAt DateTime @default(now())
  upvotes Upvotes[]
}


model Upvotes {
  id String @id @default(uuid())
  userId String
  streamId String
  user User @relation(fields: [userId], references: [id])
  stream Stream @relation(fields: [streamId], references: [id])
  @@unique([userId, streamId])    //every user can upvote a stream 1 time only
}


enum StreamType {
  Spotify
  Youtube
}


enum Provider {
  Google
}


// enum Role {
//   User
//   Streamer
// }

